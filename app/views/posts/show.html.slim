h1 投稿詳細
.post-container
  .post-main-area
    .post-image-area
      = image_tag(@post.photo.url, class: 'post-main-image')
    .post-detail-info
      .contributor-info
        = link_to image_tag(@user.image.url, class: 'profile-image'), user_path(@user.id)
        = @user.name
      .post-title
        p タイトル: #{@post.title}
      .post-description
        p 投稿者コメント: #{@post.description}
        - if @post.user_id == current_user.id
          = link_to '編集', edit_post_path(@post.id)
      .post-tags
        p タグ
        - @post_tags.each do |tag|
          = link_to tag.tag_name, tag_search_posts_path(tag_id: tag.id)
          = "(#{tag.posts.count}) "
      .photograph-info
        div
          h1 撮影情報
        div
          = "カメラ: #{@exif.model}"
        div
          = "レンズ: #{@exif.lens_model}"
        div
          = "シャッタースピード: #{@exif.exposure_time.to_s}秒"
        div
          = "絞り: f/#{@exif.f_number.to_f}"
        div
          = "ISO感度: #{@exif.iso_speed_ratings}"
        div
          = "露出補正値: #{@exif.exposure_bias_value.to_f.round(1)}EV"
        div
          = "焦点距離: #{@exif.focal_length.to_i}mm"
        div
          = "撮影日時: #{@exif.date_time_original.strftime("%Y/%m/%d %H:%M:%S")}"
        .location-map-area
          #location-map
          / APIを読み込み
          - google_api = "https://maps.googleapis.com/maps/api/js?key=#{ Rails.application.credentials.google_map_api_key }&callback=initMap".html_safe
          script{ async src=google_api }
          javascript:
            let map;
            function initMap() {
              geocoder = new google.maps.Geocoder()
              // マップを作成
              map = new google.maps.Map(document.getElementById('location-map'), {
                // マップの中心に表示する場所の緯度経度を指定
                center: { lat: #{@exif.gps.latitude}, lng: #{@exif.gps.longitude} },
                zoom: 12,
              });
              // マーカーを立てる場所の緯度経度を指定
              marker = new google.maps.Marker({
                position: { lat: #{@exif.gps.latitude}, lng: #{@exif.gps.longitude} },
                map: map
              });
            }
  .contributor-other-posts-area
    h2 = "#{@user.name}さんの他の投稿"
    .contributor-other-posts
      - @posts.each do |post|
        = link_to image_tag(post.photo.url, class: 'other-post'), post_path(post.id)
  .comments-container
    p コメント
    .comment-form
      = form_with(model:[@post, @comment], local: true) do |f|
        = f.text_area :comment, :size=>"60x3",placeholder: "コメントする"
        = f.submit "送信する"
    div
      = "コメント件数: #{@comments.count}"
      .comments-area
        - @comments.each do |comment|
          div
            = comment.user.name
          div
            = comment.comment
            - if comment.user == current_user
              = link_to "削除", post_comment_path(comment.post, comment), method: :delete, data: {confirm: "コメントを削除しますか？"}
