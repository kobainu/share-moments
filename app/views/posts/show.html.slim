.post
  .post__user
    = link_to image_tag(@post_user.image.url, class: 'profile-image'), user_path(@post_user.id)
    = @post_user.name
  .post__image
    = image_tag(@post.photo.url, class: 'post-main-image')
  .post__aside
    .post__aside__title
      p タイトル: #{@post.title}
    .post__aside__description
      p 投稿者コメント: #{@post.description}
      - if @post.user_id == current_user.id
        = link_to '編集', edit_post_path(@post.id)
    .post__aside__tags
      p タグ
      - @post_tags.each do |tag|
        = link_to tag.tag_name, tag_search_posts_path(tag_id: tag.id)
        = "(#{tag.posts.count}) "
    .post__aside__photograph-info
      div
        h1 撮影情報
      div
        div
          p カメラ:
        div
          = @post.camera ? (link_to @post.camera, camera_search_posts_path(camera: @post.camera)) : '---'
      div
        div
          p レンズ:
        div
          = @post.lens ? @post.lens : '---'
      div
        div
          p シャッタースピード:
        div
          = @post.exposure_time != "" ? "#{@post.exposure_time}秒" : '---'
      div
        div
          p 絞り:
        div
          = @post.f_number != 0 ? "f/#{@post.f_number}" : '---'
      div
        div
          p ISO感度:
        div
          = @post.iso_speed_ratings != 0 ? "#{@post.iso_speed_ratings}" : '---'
      div
        div
          p 露出補正値:
        div
          = @post.exposure_bias_value != "" ? "#{@post.exposure_bias_value.to_r.to_f.round(1)}EV" : '---'
      div
        div
          p 焦点距離:
        div
          = @post.focal_length != 0 ? "#{@post.focal_length}mm" : '---'
      div
        div
          p 撮影日時:
        div
          = @post.shooting_date_time ? "#{@post.shooting_date_time.to_time.strftime("%Y年 %m月%d日 %H時%M分")}" : '---'
      .location-map-area
        - if @post.latitude.present?
          - if !@post.hide_location_info?
            p 撮影地:
            #location-map
            / APIを読み込み
            - google_api = "https://maps.googleapis.com/maps/api/js?key=#{ Rails.application.credentials.google_map_api_key }&callback=initMap".html_safe
            script{ async src=google_api }
            javascript:
              let map;
              function initMap() {
                geocoder = new google.maps.Geocoder()
                // マップを作成
                map = new google.maps.Map(document.getElementById('location-map'), {
                  // マップの中心に表示する場所の緯度経度を指定
                  center: { lat: #{@post.latitude}, lng: #{@post.longitude} },
                  zoom: 12,
                });
                // マーカーを立てる場所の緯度経度を指定
                marker = new google.maps.Marker({
                  position: { lat: #{@post.latitude}, lng: #{@post.longitude} },
                  map: map
                });
              }
          - else
            p 撮影地: ---
        - else
          p 撮影地: ---
  .post__other-posts
    h2 = "#{@post_user.name}さんの他の投稿"
    .contributor-other-posts
      - @posts.each do |post|
        = link_to image_tag(post.photo.url, class: 'other-post'), post_path(post.id)
  .comments-container
    p コメント
    .comment-form
      = form_with(model:[@post, @comment], local: true) do |f|
        = f.text_area :comment, :size=>"60x3",placeholder: "コメントする"
        = f.submit "送信する"
    div
      = "コメント件数: #{@comments.count}"
      .comments-area
        - @comments.each do |comment|
          div
            = comment.user.name
          div
            = comment.comment
            - if comment.user == current_user
              = link_to "削除", post_comment_path(comment.post, comment), method: :delete, data: {confirm: "コメントを削除しますか？"}
